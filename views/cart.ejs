<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Giỏ hàng - LYN Salon</title>
    <link rel="stylesheet" href="/css/style.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
    <style>
        .cart-page-container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
            background: #f8f9fa;
            min-height: 100vh;
        }
        
        .cart-header {
            background: white;
            padding: 20px;
            border-radius: 10px;
            margin-bottom: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .cart-title {
            font-size: 1.8rem;
            color: #333;
            margin: 0;
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .cart-content {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 20px;
        }
        
        .cart-items-section {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
        }
        
        .cart-items-table {
            width: 100%;
            border-collapse: collapse;
        }
        
        .cart-items-table th {
            background: #f8f9fa;
            padding: 15px;
            text-align: left;
            font-weight: 600;
            color: #333;
            border-bottom: 2px solid #e9ecef;
        }
        
        .cart-items-table td {
            padding: 15px;
            border-bottom: 1px solid #e9ecef;
            vertical-align: middle;
        }
        
        .product-image {
            width: 80px;
            height: 80px;
            object-fit: cover;
            border-radius: 8px;
        }
        
        .product-info {
            display: flex;
            align-items: center;
            gap: 15px;
        }
        
        .product-details h4 {
            margin: 0 0 5px 0;
            color: #333;
            font-size: 1rem;
        }
        
        .product-price {
            color: #e74c3c;
            font-weight: bold;
            font-size: 1.1rem;
        }
        
        .quantity-controls {
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .quantity-btn {
            width: 35px;
            height: 35px;
            border: 1px solid #ddd;
            background: white;
            border-radius: 5px;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            transition: all 0.3s;
        }
        
        .quantity-btn:hover {
            background: #f8f9fa;
            border-color: #007bff;
        }
        
        .quantity-input {
            width: 60px;
            height: 35px;
            text-align: center;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
        }
        
        .remove-btn {
            color: #dc3545;
            background: none;
            border: none;
            cursor: pointer;
            font-size: 1.2rem;
            transition: color 0.3s;
        }
        
        .remove-btn:hover {
            color: #c82333;
        }
        
        .subtotal {
            font-weight: bold;
            color: #e74c3c;
            font-size: 1.1rem;
        }
        
        .payment-section {
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            height: fit-content;
        }
        
        .payment-method {
            margin-bottom: 30px;
        }
        
        .payment-method h3 {
            color: #333;
            margin-bottom: 15px;
            font-size: 1.2rem;
        }
        
        .payment-options {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }
        
        .payment-option {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            cursor: pointer;
            transition: all 0.3s;
        }
        
        .payment-option:hover {
            border-color: #007bff;
        }
        
        .payment-option input[type="radio"] {
            margin: 0;
        }
        
        .delivery-info {
            margin-bottom: 30px;
        }
        
        .delivery-info h3 {
            color: #333;
            margin-bottom: 15px;
            font-size: 1.2rem;
        }
        
        .form-group {
            margin-bottom: 15px;
        }
        
        .form-group label {
            display: block;
            margin-bottom: 5px;
            color: #333;
            font-weight: 500;
        }
        
        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
            font-size: 1rem;
            transition: border-color 0.3s;
        }
        
        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #007bff;
        }
        
        .form-group textarea {
            resize: vertical;
            min-height: 80px;
        }
        
        .total-section {
            background: #f8f9fa;
            padding: 20px;
            border-radius: 8px;
            margin-bottom: 20px;
        }
        
        .total-amount {
            font-size: 1.5rem;
            font-weight: bold;
            color: #e74c3c;
            text-align: right;
        }
        
        .checkout-btn {
            width: 100%;
            background: #ff6b35;
            color: white;
            padding: 15px;
            border: none;
            border-radius: 8px;
            font-size: 1.1rem;
            font-weight: bold;
            cursor: pointer;
            transition: background 0.3s;
        }
        
        .checkout-btn:hover {
            background: #e55a2b;
        }
        
        .empty-cart {
            text-align: center;
            padding: 50px 20px;
            color: #666;
        }
        
        .empty-cart i {
            font-size: 4rem;
            color: #ddd;
            margin-bottom: 20px;
        }
        
        .empty-cart h3 {
            margin-bottom: 10px;
            color: #333;
        }
        
        .continue-shopping {
            background: #007bff;
            color: white;
            padding: 12px 25px;
            border: none;
            border-radius: 5px;
            text-decoration: none;
            display: inline-block;
            margin-top: 20px;
            transition: background 0.3s;
        }
        
        .continue-shopping:hover {
            background: #0056b3;
            color: white;
        }
        
        @media (max-width: 768px) {
            .cart-content {
                grid-template-columns: 1fr;
            }
            
            .cart-items-table {
                font-size: 0.9rem;
            }
            
            .product-image {
                width: 60px;
                height: 60px;
            }
            
            .quantity-controls {
                flex-direction: column;
                gap: 5px;
            }
        }
    </style>
</head>
<body>
    <%- include('partials/header') %>
    
    <div class="cart-page-container">
        <div class="cart-header">
            <h1 class="cart-title">
                <i class="fas fa-shopping-cart"></i>
                GIỎ HÀNG CỦA BẠN
            </h1>
        </div>
        
        <div class="cart-content">
            <!-- Cart Items Section -->
            <div class="cart-items-section">
                <table class="cart-items-table" id="cartTable">
                    <thead>
                        <tr>
                            <th>Hình Ảnh</th>
                            <th>Tên Sản Phẩm</th>
                            <th>Số Lượng</th>
                            <th>Thành Tiền</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody id="cartItems">
                        <!-- Cart items will be populated here -->
                    </tbody>
                </table>
                
                <div id="emptyCart" class="empty-cart" style="display: none;">
                    <i class="fas fa-shopping-cart"></i>
                    <h3>Giỏ hàng trống</h3>
                    <p>Bạn chưa có sản phẩm nào trong giỏ hàng</p>
                    <a href="/products" class="continue-shopping">
                        <i class="fas fa-shopping-bag"></i> Tiếp tục mua sắm
                    </a>
                </div>
            </div>
            
            <!-- Payment Section -->
            <div class="payment-section">
                <!-- Payment Method -->
                <div class="payment-method">
                    <h3>HÌNH THỨC THANH TOÁN</h3>
                    <div class="payment-options">
                        <label class="payment-option">
                            <input type="radio" name="paymentMethod" value="cod" checked>
                            <span>Thanh toán tại công ty</span>
                        </label>
                        <label class="payment-option">
                            <input type="radio" name="paymentMethod" value="bank">
                            <span>Thanh toán bằng chuyển khoản</span>
                        </label>
                    </div>
                </div>
                
                <!-- Delivery Information -->
                <div class="delivery-info">
                    <h3>THÔNG TIN GIAO HÀNG</h3>
                    <form id="deliveryForm">
                        <div class="form-group">
                            <label for="fullName">Họ tên</label>
                            <input type="text" id="fullName" name="fullName" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="phone">Số điện thoại</label>
                            <input type="tel" id="phone" name="phone" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="email">Email</label>
                            <input type="email" id="email" name="email" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="province">Tỉnh/thành phố</label>
                            <select id="province" name="province" required onchange="loadDistricts()">
                                <option value="">Chọn tỉnh/thành phố</option>
                                <option value="Đà Nẵng">Đà Nẵng</option>
                                <option value="Hà Nội">Hà Nội</option>
                                <option value="TP. Hồ Chí Minh">TP. Hồ Chí Minh</option>
                                <option value="Hải Phòng">Hải Phòng</option>
                                <option value="Cần Thơ">Cần Thơ</option>
                                <option value="Đà Lạt">Đà Lạt</option>
                                <option value="Nha Trang">Nha Trang</option>
                                <option value="Huế">Huế</option>
                                <option value="Vũng Tàu">Vũng Tàu</option>
                                <option value="Qui Nhơn">Qui Nhơn</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="district">Quận/huyện</label>
                            <select id="district" name="district" required onchange="loadWards()">
                                <option value="">Chọn quận/huyện</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="ward">Phường/xã</label>
                            <select id="ward" name="ward" required>
                                <option value="">Chọn phường/xã</option>
                            </select>
                        </div>
                        
                        <div class="form-group">
                            <label for="address">Địa chỉ</label>
                            <input type="text" id="address" name="address" required>
                        </div>
                        
                        <div class="form-group">
                            <label for="notes">Yêu cầu khác (không bắt buộc)</label>
                            <textarea id="notes" name="notes" placeholder="Ghi chú thêm về đơn hàng..."></textarea>
                        </div>
                    </form>
                </div>
                
                <!-- Total and Checkout -->
                <div class="total-section">
                    <div class="total-amount">
                        Tổng tiền: <span id="totalAmount">0</span> VNĐ
                    </div>
                </div>
                
                <button class="checkout-btn" onclick="processCheckout()">
                    <i class="fas fa-credit-card"></i> THANH TOÁN
                </button>
            </div>
        </div>
    </div>
    
    <script>
        // Load cart items on page load
        document.addEventListener('DOMContentLoaded', function() {
            // Kiểm tra và load giỏ hàng của user hiện tại
            var currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');
            if (currentUser.id) {
                var userCart = localStorage.getItem('userCart_' + currentUser.id);
                if (userCart) {
                    localStorage.setItem('cart', userCart);
                }
            }
            
            loadCartItems();
            updateHeaderCartCount();
        });
        
        function loadCartItems() {
            var cart = JSON.parse(localStorage.getItem('cart')) || [];
            var cartItemsContainer = document.getElementById('cartItems');
            var emptyCartDiv = document.getElementById('emptyCart');
            var cartTable = document.getElementById('cartTable');
            
            if (cart.length === 0) {
                cartTable.style.display = 'none';
                emptyCartDiv.style.display = 'block';
                document.getElementById('totalAmount').textContent = '0';
                return;
            }
            
            cartTable.style.display = 'table';
            emptyCartDiv.style.display = 'none';
            
                    var total = 0;
        var cartHTML = '';
            
            cart.forEach(function(item, index) {
                var itemTotal = item.price * item.quantity;
                total += itemTotal;
                
                cartHTML += 
                    '<tr>' +
                        '<td>' +
                            '<div class="product-info">' +
                                '<img src="' + item.image + '" alt="' + item.name + '" class="product-image" onerror="this.src=\'/images/product1.jpg\'">' +
                            '</div>' +
                        '</td>' +
                        '<td>' +
                            '<div class="product-details">' +
                                '<h4>' + item.name + '</h4>' +
                                '<div class="product-price">₫ ' + item.price.toLocaleString('vi-VN', { minimumFractionDigits: 0, maximumFractionDigits: 0 }).replace(/,/g, '.') + '</div>' +
                            '</div>' +
                        '</td>' +
                        '<td>' +
                            '<div class="quantity-controls">' +
                                '<button class="quantity-btn" onclick="updateQuantity(' + item.id + ', -1)">-</button>' +
                                '<input type="number" class="quantity-input" value="' + item.quantity + '" ' +
                                       'onchange="updateQuantityDirect(' + item.id + ', this.value)" min="1">' +
                                '<button class="quantity-btn" onclick="updateQuantity(' + item.id + ', 1)">+</button>' +
                            '</div>' +
                        '</td>' +
                        '<td>' +
                            '<div class="subtotal">₫ ' + itemTotal.toLocaleString('vi-VN', { minimumFractionDigits: 0, maximumFractionDigits: 0 }).replace(/,/g, '.') + '</div>' +
                        '</td>' +
                        '<td>' +
                            '<button class="remove-btn" onclick="removeFromCart(' + item.id + ')">' +
                                '<i class="fas fa-times"></i>' +
                            '</button>' +
                        '</td>' +
                    '</tr>';
            });
            
            cartItemsContainer.innerHTML = cartHTML;
            document.getElementById('totalAmount').textContent = total.toLocaleString('vi-VN');
        }
        
        function updateQuantity(productId, change) {
            var cart = JSON.parse(localStorage.getItem('cart')) || [];
            var item = cart.find(function(item) { return item.id === productId; });
            
            if (item) {
                item.quantity += change;
                if (item.quantity <= 0) {
                    removeFromCart(productId);
                } else {
                    localStorage.setItem('cart', JSON.stringify(cart));
                    // Tự động lưu giỏ hàng cho user hiện tại
                    var currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');
                    if (currentUser.id) {
                        localStorage.setItem('userCart_' + currentUser.id, JSON.stringify(cart));
                    }
                    loadCartItems();
                    updateHeaderCartCount();
                }
            }
        }
        
        function updateQuantityDirect(productId, newQuantity) {
            var cart = JSON.parse(localStorage.getItem('cart')) || [];
            var item = cart.find(function(item) { return item.id === productId; });
            
            if (item) {
                item.quantity = parseInt(newQuantity) || 1;
                if (item.quantity <= 0) {
                    removeFromCart(productId);
                } else {
                    localStorage.setItem('cart', JSON.stringify(cart));
                    // Tự động lưu giỏ hàng cho user hiện tại
                    var currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');
                    if (currentUser.id) {
                        localStorage.setItem('userCart_' + currentUser.id, JSON.stringify(cart));
                    }
                    loadCartItems();
                    updateHeaderCartCount();
                }
            }
        }
        
        function removeFromCart(productId) {
            var cart = JSON.parse(localStorage.getItem('cart')) || [];
            cart = cart.filter(function(item) { return item.id !== productId; });
            localStorage.setItem('cart', JSON.stringify(cart));
            // Tự động lưu giỏ hàng cho user hiện tại
            var currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');
            if (currentUser.id) {
                localStorage.setItem('userCart_' + currentUser.id, JSON.stringify(cart));
            }
            loadCartItems();
            updateHeaderCartCount();
        }
        
        // Dữ liệu quận/huyện và phường/xã
        const addressData = {
            'Đà Nẵng': {
                'Hải Châu': ['Phước Ninh', 'Thạch Thang', 'Nam Dương', 'Bình Hiên', 'Bình Thuận', 'Hòa Cường Bắc', 'Hòa Cường Nam'],
                'Thanh Khê': ['An Khê', 'Chính Gián', 'Hòa Khê', 'Tam Thuận', 'Tân Chính', 'Thạc Gián', 'Vĩnh Trung'],
                'Sơn Trà': ['An Hải Bắc', 'An Hải Đông', 'An Hải Nam', 'An Hải Tây', 'Mân Thái', 'Nại Hiên Đông', 'Phước Mỹ', 'Thọ Quang'],
                'Ngũ Hành Sơn': ['Hòa Hải', 'Hòa Quý', 'Khuê Mỹ', 'Mỹ An'],
                'Liên Chiểu': ['Hòa Hiệp Bắc', 'Hòa Hiệp Nam', 'Hòa Khánh Bắc', 'Hòa Khánh Nam', 'Hòa Minh', 'Hòa Phát', 'Hòa Thọ Đông', 'Hòa Thọ Tây'],
                'Cẩm Lệ': ['Hòa An', 'Hòa Phát', 'Hòa Thọ Đông', 'Hòa Thọ Tây', 'Khuê Trung', 'Nam Thọ', 'Phước Ninh']
            },
            'Hà Nội': {
                'Ba Đình': ['Phúc Xá', 'Trúc Bạch', 'Vĩnh Phúc', 'Cống Vị', 'Liễu Giai', 'Nguyễn Trung Trực', 'Quán Thánh', 'Ngọc Hà', 'Điện Biên', 'Đội Cấn', 'Ngọc Khánh', 'Kim Mã', 'Giảng Võ', 'Thành Công'],
                'Hoàn Kiếm': ['Phúc Tân', 'Đồng Xuân', 'Hàng Mã', 'Hàng Vôi', 'Hàng Gai', 'Hàng Trống', 'Hàng Bông', 'Hàng Bồ', 'Hàng Bạc', 'Hàng Buồm', 'Hàng Đào', 'Hàng Ngang', 'Hàng Nón', 'Cầu Đông', 'Lý Thái Tổ', 'Hàng Bút', 'Hàng Than', 'Hàng Giấy', 'Hàng Lược', 'Chương Dương', 'Hàng Vải', 'Cửa Đông', 'Lý Thường Kiệt', 'Phan Chu Trinh', 'Hàng Bài'],
                'Hai Bà Trưng': ['Phạm Đình Hổ', 'Lê Đại Hành', 'Đồng Nhân', 'Phố Huế', 'Đống Mác', 'Thanh Lương', 'Thanh Nhàn', 'Cầu Dền', 'Bách Khoa', 'Đồng Tâm', 'Quỳnh Lôi', 'Quỳnh Mai', 'Minh Khai', 'Đồng Tâm', 'Trương Định', 'Tân Mai', 'Hoàng Văn Thụ', 'Giáp Bát', 'Vĩnh Tuy', 'Bạch Mai', 'Quỳnh Lôi', 'Lương Yên', 'Vĩnh Hưng', 'Thanh Trì', 'Vĩnh Hưng', 'Định Công', 'Mai Động', 'Tương Mai', 'Đại Kim', 'Hoàng Liệt', 'Lĩnh Nam', 'Vĩnh Hưng', 'Định Công', 'Mai Động', 'Tương Mai', 'Đại Kim', 'Hoàng Liệt', 'Lĩnh Nam', 'Vĩnh Hưng', 'Định Công', 'Mai Động', 'Tương Mai', 'Đại Kim', 'Hoàng Liệt', 'Lĩnh Nam']
            },
            'TP. Hồ Chí Minh': {
                'Quận 1': ['Bến Nghé', 'Bến Thành', 'Cầu Kho', 'Cầu Ông Lãnh', 'Cô Giang', 'Đa Kao', 'Nguyễn Cư Trinh', 'Nguyễn Thái Bình', 'Phạm Ngũ Lão', 'Tân Định'],
                'Quận 2': ['An Khánh', 'An Lợi Đông', 'An Phú', 'Bình An', 'Bình Khánh', 'Bình Trưng Đông', 'Bình Trưng Tây', 'Cát Lái', 'Thạnh Mỹ Lợi', 'Thảo Điền', 'Thủ Thiêm'],
                'Quận 3': ['Phường 1', 'Phường 2', 'Phường 3', 'Phường 4', 'Phường 5', 'Phường 6', 'Phường 7', 'Phường 8', 'Phường 9', 'Phường 10', 'Phường 11', 'Phường 12', 'Phường 13', 'Phường 14']
            }
        };

        function loadDistricts() {
            const province = document.getElementById('province').value;
            const districtSelect = document.getElementById('district');
            const wardSelect = document.getElementById('ward');
            
            // Reset district và ward
            districtSelect.innerHTML = '<option value="">Chọn quận/huyện</option>';
            wardSelect.innerHTML = '<option value="">Chọn phường/xã</option>';
            
            if (province && addressData[province]) {
                const districts = Object.keys(addressData[province]);
                districts.forEach(district => {
                    const option = document.createElement('option');
                    option.value = district;
                    option.textContent = district;
                    districtSelect.appendChild(option);
                });
            }
        }

        function loadWards() {
            const province = document.getElementById('province').value;
            const district = document.getElementById('district').value;
            const wardSelect = document.getElementById('ward');
            
            // Reset ward
            wardSelect.innerHTML = '<option value="">Chọn phường/xã</option>';
            
            if (province && district && addressData[province] && addressData[province][district]) {
                const wards = addressData[province][district];
                wards.forEach(ward => {
                    const option = document.createElement('option');
                    option.value = ward;
                    option.textContent = ward;
                    wardSelect.appendChild(option);
                });
            }
        }

        function processCheckout() {
            // Kiểm tra xem user đã đăng nhập chưa
            var currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');
            if (!currentUser.id) {
                alert('Vui lòng đăng nhập để đặt hàng!');
                window.location.href = '/login';
                return;
            }
            
            var cart = JSON.parse(localStorage.getItem('cart')) || [];
            if (cart.length === 0) {
                alert('Giỏ hàng trống!');
                return;
            }
            
            var form = document.getElementById('deliveryForm');
            if (!form.checkValidity()) {
                alert('Vui lòng điền đầy đủ thông tin giao hàng!');
                return;
            }
            
            var formData = new FormData(form);
            var deliveryInfo = Object.fromEntries(formData);
            var paymentMethod = document.querySelector('input[name="paymentMethod"]:checked').value;
            
            // Chuẩn bị dữ liệu đơn hàng
            var cartItems = cart.map(function(item) {
                return {
                    product_id: item.id,
                    quantity: item.quantity,
                    price: item.price
                };
            });
            
            // Tạo địa chỉ đầy đủ
            var fullAddress = deliveryInfo.address;
            if (deliveryInfo.ward) {
                fullAddress = deliveryInfo.ward + ', ' + deliveryInfo.district + ', ' + deliveryInfo.province;
                if (deliveryInfo.address) {
                    fullAddress = deliveryInfo.address + ', ' + fullAddress;
                }
            }
            
            var orderData = {
                cartItems: cartItems,
                shippingAddress: fullAddress,
                province: deliveryInfo.province,
                district: deliveryInfo.district,
                ward: deliveryInfo.ward,
                fullName: deliveryInfo.fullName,
                phone: deliveryInfo.phone,
                email: deliveryInfo.email,
                paymentMethod: paymentMethod,
                notes: deliveryInfo.notes || ''
            };
            
            // Gửi đơn hàng đến server
            fetch('/orders/place', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(orderData)
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    alert('Đặt hàng thành công! Cảm ơn bạn đã mua sắm tại LYN Salon.');
                    localStorage.removeItem('cart');
                    // Xóa giỏ hàng của user hiện tại
                    var currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');
                    if (currentUser.id) {
                        localStorage.removeItem('userCart_' + currentUser.id);
                    }
                    loadCartItems();
                    updateHeaderCartCount();
                    
                    // Redirect to dashboard
                    setTimeout(function() {
                        window.location.href = '/dashboard';
                    }, 2000);
                } else {
                    alert('Có lỗi xảy ra: ' + data.message);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('Có lỗi xảy ra khi đặt hàng. Vui lòng thử lại!');
            });
        }
        
        function updateHeaderCartCount() {
            if (typeof updateCartCount === 'function') {
                updateCartCount();
            }
        }
    </script>
</body>
</html> 