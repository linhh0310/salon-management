const mysql = require('mysql2/promise');
require('dotenv').config();

async function setupProducts() {
    let connection;
    
    try {
        // K·∫øt n·ªëi database
        connection = await mysql.createConnection({
            host: process.env.DB_HOST || 'localhost',
            user: process.env.DB_USER || 'root',
            password: process.env.DB_PASSWORD || '',
            database: process.env.DB_NAME || 'salon_db'
        });

        console.log('‚úÖ K·∫øt n·ªëi database th√†nh c√¥ng');

        // T·∫°o b·∫£ng products n·∫øu ch∆∞a t·ªìn t·∫°i
        const createProductsTable = `
            CREATE TABLE IF NOT EXISTS products (
                id INT AUTO_INCREMENT PRIMARY KEY,
                name VARCHAR(200) NOT NULL,
                description TEXT,
                price DECIMAL(10,2) NOT NULL,
                quantity INT NOT NULL DEFAULT 0 COMMENT 'S·ªë l∆∞·ª£ng t·ªìn kho',
                category VARCHAR(100) NOT NULL,
                image_url VARCHAR(255),
                features TEXT COMMENT 'C√°c t√≠nh nƒÉng s·∫£n ph·∫©m (JSON format)',
                status ENUM('active', 'inactive') DEFAULT 'active',
                created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
            )
        `;

        await connection.execute(createProductsTable);
        console.log('‚úÖ B·∫£ng products ƒë√£ ƒë∆∞·ª£c t·∫°o');

        // Ki·ªÉm tra xem ƒë√£ c√≥ d·ªØ li·ªáu m·∫´u ch∆∞a
        const [existingProducts] = await connection.execute('SELECT COUNT(*) as count FROM products');
        
        if (existingProducts[0].count === 0) {
            // Th√™m d·ªØ li·ªáu m·∫´u
            const insertProducts = `
                INSERT INTO products (name, description, price, quantity, category, image_url, features) VALUES 
                ('X·ªãt t·∫°o ki·ªÉu t√≥c Glanzen X2 Booster', 'X·ªãt t·∫°o ki·ªÉu t√≥c cao c·∫•p v·ªõi kh·∫£ nƒÉng t·∫°o ph·ªìng v√† b·∫£o v·ªá t√≥c', 272000, 50, 'S·∫£n ph·∫©m t√≥c', '/images/glanzen-spray.jpg', '["T·∫°o Ph√≤ng V√† B·∫£o V·ªá T√≥c", "V√≤i X·ªãt Cao C·∫•p", "M√πi H∆∞∆°ng Quy·∫øn R≈©"]'),
                ('Tinh ch·∫•t d∆∞·ª°ng da cho nam Serum Dr.FORSKIN', 'Serum d∆∞·ª°ng da 7 trong 1 cho nam gi·ªõi', 499000, 30, 'S·∫£n ph·∫©m chƒÉm s√≥c da', '/images/product1.jpg', '["D∆∞·ª°ng Da 7 Trong 1 Ti·ªán L·ª£i", "Ph·ª•c H·ªìi Da Ch√°y N·ªìng", "Ph√π H·ª£p V·ªõi Nhi·ªÅu Lo·∫°i Da"]'),
                ('S√°p vu·ªët t√≥c nam Kevin Murphy Rough Rider', 'S√°p vu·ªët t√≥c cao c·∫•p v·ªõi kh·∫£ nƒÉng gi·ªØ n·∫øp l√¢u b·ªÅn', 319000, 25, 'S·∫£n ph·∫©m t√≥c', '/images/product2.jpg', '["Gi·ªØ n·∫øp l√¢u b·ªÅn", "K·∫øt c·∫•u t·ª± nhi√™n", "D·ªÖ g·ªôi s·∫°ch"]'),
                ('S√°p vu·ªët t√≥c Glanzen Clay Wax - Gi·ªØ n·∫øp', 'S√°p vu·ªët t√≥c clay v·ªõi kh·∫£ nƒÉng gi·ªØ n·∫øp t·ª± nhi√™n', 189000, 40, 'S·∫£n ph·∫©m t√≥c', '/images/product3.jpg', '["Gi·ªØ n·∫øp t·ª± nhi√™n", "Kh√¥ng b·∫øt d√≠nh", "Ph√π h·ª£p m·ªçi ki·ªÉu t√≥c"]')
            `;

            await connection.execute(insertProducts);
            console.log('‚úÖ D·ªØ li·ªáu s·∫£n ph·∫©m m·∫´u ƒë√£ ƒë∆∞·ª£c th√™m');
        } else {
            console.log('‚ÑπÔ∏è D·ªØ li·ªáu s·∫£n ph·∫©m ƒë√£ t·ªìn t·∫°i');
        }

        // Hi·ªÉn th·ªã danh s√°ch s·∫£n ph·∫©m
        const [products] = await connection.execute('SELECT id, name, price, quantity, category FROM products WHERE status = "active"');
        
        console.log('\nüìã Danh s√°ch s·∫£n ph·∫©m hi·ªán t·∫°i:');
        console.log('ID | T√™n s·∫£n ph·∫©m | Gi√° | S·ªë l∆∞·ª£ng | Danh m·ª•c');
        console.log('---|--------------|-----|----------|---------');
        
        products.forEach(product => {
            console.log(`${product.id.toString().padStart(2)} | ${product.name.substring(0, 30).padEnd(30)} | ${product.price.toLocaleString('vi-VN')} | ${product.quantity.toString().padStart(8)} | ${product.category}`);
        });

        console.log('\nüéâ Setup s·∫£n ph·∫©m ho√†n t·∫•t!');
        console.log('üåê Truy c·∫≠p: http://localhost:3000/products');

    } catch (error) {
        console.error('‚ùå L·ªói:', error.message);
    } finally {
        if (connection) {
            await connection.end();
        }
    }
}

// Ch·∫°y setup
setupProducts(); 